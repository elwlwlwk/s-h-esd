{"version":3,"sources":["../src/detect_anoms.js"],"names":["libR","require","StudentT","MarsagliaMultiCarry","rng","AhrensDieter","normal","defaultT","mmc","ad","explicitT","pt","transpose","m","map","x","i","median","t_x","slice","sort","a","b","parseInt","length","mad","c","med","Math","abs","erf","xe","eres","Array","xet","sume","sqrt","PI","xsqr","constructor","ie","parseFloat","sgn","je","pow","exp","stdtrit","df","q","large","small","ppf","detect_anoms","data","k","alpha","num_obs_per_period","use_decomp","one_tail","upper_tail","verbose","num_obs","sliced_data","null_count","idx","filter","datum","decomp","STL","robust","d","timestamp","value","seasonal","t","p","trend","data_decomp","max_outliers","n","R_idx","keys","num_anoms","data_med","ares","dadatumta","data_sigma","are","R","max","temp_max_idx","lam","anoms","stl","module","exports"],"mappings":"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","file":"detect_anoms.js","sourcesContent":["import {STL} from 'stlnode';\n\nconst libR = require('lib-r-math.js');\nconst {\n  StudentT,\n  rng: { MarsagliaMultiCarry },\n  rng: { normal: { AhrensDieter } } \n} = libR;\n \n//*.Uses default argument \"Normal()\".\n//*.Normal itself using default arguments.\nconst defaultT = StudentT();\n \n//explicit use of PRNG's\nconst mmc = new MarsagliaMultiCarry(0);\nconst ad = new AhrensDieter(mmc);\n \n//*create explicit functions\nconst explicitT = StudentT(ad);\n \nconst { pt } = explicitT;\n\nfunction transpose(m) { return m[0].map((x,i) => m.map(x => x[i])) };\n\nfunction median(x) {\n    var t_x = x.slice(0).sort( (a,b) => a-b );\n    return t_x[parseInt(t_x.length/2)];\n}\n\nfunction mad(x, c=0.6744897501960817) {\n    var med = median(x);\n    return median(x.map( (x) => Math.abs(x - med) ))/c;\n}\n\nfunction erf(xe){\n    var eres=new Array();\n    var xet=new Array();\n    var sume=0;\n    var c=new Array();\n    c[0]=0; c[1]=-2/Math.sqrt(Math.PI); c[2]=-6.366197121956e-1; c[3]=-1.027728162129e-1; c[4]=1.912427299414e-2; c[5]=2.401479235527e-4;\n    c[6]=-1.786242904258e-3;c[7]=7.336113173091e-4;c[8]=-1.655799102866e-4;c[9]=2.116490536557e-5;c[10]=-1.96623630319e-6;\n    var xsqr;\n    if (xe.constructor != Array) {xet=new Array(1); xet[0]=xe; eres[0]=0;}\n    else {for (var ie=0;ie<xe.length;ie++) { eres[ie]=0; xet[ie]=parseFloat(xe[ie]);}}\n    for (var ie=0;ie<xet.length;ie++) {\n        var sgn=1;\n        if (xet[ie]<0) sgn=-1;\n        sume=0\n        for (var je=1;je<c.length;je++){\n            sume=sume+c[je]*Math.pow(Math.abs(xet[ie]),je);\n        }\n        eres[ie]=sgn*(1-Math.exp(sume))*1;\n    }\n    return eres;\n}\n\nfunction stdtrit(df, q) {\n    var large = 100;\n    var small = 0;\n    for(let i=0; i< 30; i++) {\n        if(pt(small + (large-small)/2, df) > q) {\n            large -= (large-small)/2;\n        } else {\n            small += (large-small)/2;\n        }\n    }\n    return (large+small)/2;\n}\n\nfunction ppf(q, df) {\n    return stdtrit(df, q);\n}\n\nfunction detect_anoms(data, {k=0.49, alpha=0.05, num_obs_per_period=null,\n                      use_decomp=true, one_tail=true,\n                      upper_tail=true, verbose=false}\n) {\n    if(num_obs_per_period === null) throw 'must supply period length for time series decomposition';\n\n    var num_obs = data.length;\n\n    if(num_obs < num_obs_per_period * 2) throw 'Anom detection needs at least 2 periods worth of data';\n\n    //run length encode result of isnull, check for internal nulls\n    if(((data) => {\n        var sliced_data = data.slice(0, -1);\n        var null_count = 2;\n        for(let idx=0; idx<sliced_data.length-1; idx++){\n            if(sliced_data[idx][1] && !sliced_data[idx+1][1]) {\n                null_count += 1;\n            }\n        }\n        return null_count;\n    })(data) > 2) {\n        throw 'Data contains non-leading NAs. We suggest replacing NAs with interpolated values';\n    } else {\n        data = data.filter( (datum) => datum[1] );\n    }\n    var decomp = new STL(data, num_obs_per_period, 'periodic', {robust: true});\n\n    var d = {\n        timestamp: data.map( datum => datum[0] ),\n        value: transpose([data.map( datum => datum[1] ), decomp.seasonal]).map( (t) => t[0] - t[1] )\n    }\n\n    data = transpose([d.timestamp, d.value]);\n\n    var p = {\n        timestamp: data.map( datum => datum[0] ),\n        value: transpose([decomp.trend, decomp.seasonal]).map( (t) => t[0] + t[1] )\n    }\n    var data_decomp = transpose([p.timestamp, p.value]);\n\n    var max_outliers = parseInt(num_obs * k);\n\n    if(max_outliers === 0) throw `With longterm=TRUE, AnomalyDetection splits the data into 2 week periods by default. You have ${num_obs} observations in a period, which is too few. Set a higher piecewise_median_period_weeks.`;\n\n    var n = data.length;\n    var R_idx = [...Array(max_outliers).keys()];\n\n    var num_anoms = 0;\n\n    for(let i=1; i<max_outliers+1; i++) {\n        let data_med = median(data.map( (datum) => datum[1] ));\n        if(one_tail) {\n            if(upper_tail) {\n                var ares = data.map( (datum) => [datum[0], datum[1] - data_med] );\n            } else {\n                var ares = data.map( (datum) => [datum[0], data_med - dadatumta[1]] );\n            }\n        } else {\n            var ares = data.map( (datum) => [datum[0], Math.abs(datum[1] - data_med)] );\n        }\n\n        var data_sigma = mad(data.map( (datum) => datum[1] ));\n        if(data_sigma === 0) {\n            break;\n        }\n\n        ares = ares.map( (are) => [are[0], are[1] / data_sigma] );\n\n        var R = Math.max(...ares.map( (are) => are[1] ));\n\n        var temp_max_idx = ares.filter( (are) => are[1] === R )[0][0];\n\n        R_idx[i-1] = temp_max_idx;\n        data = data.filter( (datum) => datum[0] !== R_idx[i-1] )\n\n        if(one_tail) {\n            var p = 1 - alpha / parseFloat(n - i + 1);\n        } else {\n            var p = 1 - alpha / parseFloat(2 * (n - i + 1));\n        }\n\n        var t = ppf(p, n - i - 1);\n        var lam = t * (n - i) / parseFloat(Math.sqrt((n - i - 1 + Math.pow(t, 2)) * (n - i + 1)));\n\n        if(R > lam) {\n            num_anoms = i;\n        }\n    }\n\n    if(num_anoms > 0) {\n        R_idx = R_idx.slice(0, num_anoms);\n    } else {\n        R_idx = null;\n    }\n    return {\n        anoms: R_idx,\n        stl: data_decomp\n    };\n}\n\nmodule.exports.detect_anoms = detect_anoms;"]}