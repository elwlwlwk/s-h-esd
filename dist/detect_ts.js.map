{"version":3,"sources":["../src/detect_ts.js"],"names":["median","x","t_x","slice","sort","a","b","parseInt","length","quantile","q","idx","Math","round","detect_ts","df","max_anoms","direction","alpha","only_last","threshold","e_value","longterm","piecewise_median_period_weeks","plot","y_log","xlabel","ylabel","title","verbose","Array","isArray","map","row","filter","Number","isFinite","col","len","includes","console","warn","gran","num_days_per_line","min_df","Date","toISOString","substr","agg_df","forEach","Object","keys","key","gran_perod","period","num_obs","clamp","num_obs_in_period","num_days_in_period","last_date","all_data","j","start_date","end_date","min","getTime","floor","sub_df","push","all_anoms","seasonal_plus_trend","i","directions","pos","one_tail","upper_tail","neg","both","anomaly_direction","s_h_esd_timestamps","k","num_obs_per_period","use_decomp","data_decomp","stl","anoms","datum","indexOf","date_group","d","date_string","toLocaleDateString","periodic_maxes","date","max","thresh","anom","concat","setDate","getDate","start_anoms","breaks","toDateString","setHours","getHours","x_subset_single_day","x_subset_week","anom_pct","parseFloat","exp_val","st","timestamp","expected_value","module","exports"],"mappings":"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","file":"detect_ts.js","sourcesContent":["import { get_gran } from './date_utils';\nimport { detect_anoms } from './detect_anoms'\n\nfunction median(x) {\n    var t_x = x.slice(0).sort( (a,b) => a-b );\n    return t_x[parseInt(t_x.length/2)];\n}\n\nfunction quantile(x, q) {\n    var t_x = x.slice(0).sort( (a,b) => a-b );\n    var idx = Math.round(t_x.length * q);\n    return t_x[idx];\n}\n\nfunction detect_ts(df, {max_anoms=0.10, direction='pos', alpha=0.05, \n                   only_last=null, threshold=null, e_value=false,\n                   longterm=false, piecewise_median_period_weeks=2,\n                   plot=false, y_log=false, xlabel = '',\n                   ylabel = 'count', title=null, verbose=false}\n) {\n    if(!Array.isArray(df)) {\n        throw 'data must be a single data frame';\n    } else {\n        if(df[0].length != 2 || !df.map(row=>row[1]).filter(col=>Number.isFinite(col)).length) {\n            throw 'data must be a 2 column data.frame, with the first column being a set of timestamps, and the second coloumn being numeric values.'\n        }\n    }\n    if(max_anoms > 0.49) {\n        length = len(df);\n        throw `max_anoms must me less then 50% of the data points (max_anoms =${max_anoms * length} data_points =${length}`;\n    }\n\n    if(!['pos', 'neg', 'both'].includes(direction)) {\n        throw 'direction options are: pos | neg | both.';\n    }\n\n    if(!(0.01 <= alpha || alpha <= 0.1)) {\n        if(verbose) console.warn('alpha is the statistical signifigance and is usually between 0.01 and 0.1');\n    }\n\n    if(only_last && !['day', 'hr'].includes(only_last)) {\n        throw 'only_last must be either \\'day\\' or \\'hr\\'';\n    }\n\n    if(![null,'med_max','p95','p99'].includes(threshold)) {\n        throw 'threshold options are: None | med_max | p95 | p99';\n    }\n\n    if(!typeof e_value === 'boolean') {\n        throw 'e_value must be a boolean';\n    }\n\n    if(!typeof longterm === 'boolean') {\n        throw 'longterm must be a boolean';\n    }\n\n    if(piecewise_median_period_weeks < 2) {\n        throw 'piecewise_median_period_weeks must be at greater than 2 weeks';\n    }\n\n    if(!typeof plot === 'boolean') {\n        throw 'plot must be a boolean';\n    }\n\n    if(!typeof y_log === 'boolean') {\n        throw 'y_log must be a boolean';\n    }\n\n    if(!typeof xlabel === 'string') {\n        throw 'xlabel must be a string';\n    }\n\n    if(!typeof ylabel === 'string') {\n        throw 'ylabel must be a string';\n    }\n\n    if(!typeof title === 'string') {\n        throw 'title must be a string';\n    }\n\n    if(!title) {\n        title = '';\n    } else title = title + ':';\n\n    var gran = get_gran(df);\n\n    if(gran === 'day') {\n        var num_days_per_line = 7;\n        if(typeof only_last === 'string' && only_last === 'hr') {\n            only_last = 'day';\n        }\n    } else {\n        var num_days_per_line = 1;\n    }\n\n    if(gran === 'sec') {\n        var min_df = df.map( (row) => [new Date(new Date(row[0]).toISOString().substr(0, 16) + \":00\").toISOString(), row[1]] );\n        var agg_df = {};\n        min_df.forEach( row => {\n            agg_df[row[0]] ? agg_df[row[0]] += row[1] : agg_df[row[0]] = row[1];\n        });\n        df = Object.keys(agg_df).map( key => [key, agg_df[key]] ).sort();\n    }\n\n    var gran_perod = {\n        'min': 1440,\n        'hr': 24,\n        'day': 7\n    };\n    var period = gran_perod[gran];\n    if(!period) {\n        throw `${gran} granularity detected. This is currently not supported.`;\n    }\n    var num_obs = df.length;\n\n    var clamp = (1 / num_obs);\n    if(max_anoms < clamp) {\n        max_anoms = clamp;\n    }\n\n    if(longterm) {\n        if(gran === 'day') {\n            var num_obs_in_period = period * piecewise_median_period_weeks + 1;\n            var num_days_in_period = 7 * piecewise_median_period_weeks + 1;\n        } else {\n            var num_obs_in_period = period * 7 * piecewise_median_period_weeks;\n            var num_days_in_period = 7 * piecewise_median_period_weeks;\n        }\n\n        var last_date = df.slice(-1)[0][0];\n\n        var all_data = [];\n\n        for(var j=0; j<df.length; j+=num_obs_in_period) {\n            var start_date = new Date(df[j][0]);\n            var end_date = new Date(Math.min(start_date.getTime() + 1000 * 60 * 60 * 24 * num_days_in_period, new Date(df.slice(-1)[0][0]).getTime()));\n\n            if(Math.floor((end_date - start_date) / (1000 * 60 * 60 * 24)) === num_days_in_period) {\n                var sub_df = df.filter( (row) => new Date(row[0]) >= start_date && new Date(row[0]) < end_date );\n            } else {\n                var sub_df = df.filter( (row) => new Date(row[0]) > new Date(last_date.getTime() - (1000 * 60 * 60 * 24 * num_days_in_period)) && new Date(row[0]) <= last_date );\n            }\n            all_data.push(sub_df);\n        }\n    } else {\n        var all_data = [df];\n    }\n\n    var all_anoms = [];\n    var seasonal_plus_trend = [];\n\n    for(var i in all_data) {\n        var directions = {\n            pos: {one_tail: true, upper_tail: true},\n            neg: {one_tail: true, upper_tail: false},\n            both: {one_tail: false, upper_tail: false}\n        }\n        var anomaly_direction = directions[direction];\n\n        var s_h_esd_timestamps = detect_anoms(all_data[i], {k:max_anoms, alpha:alpha, num_obs_per_period:period, use_decomp:true,\n                                          one_tail:anomaly_direction.one_tail, upper_tail:anomaly_direction.upper_tail, verbose:verbose});\n        \n        var data_decomp = s_h_esd_timestamps.stl;\n        s_h_esd_timestamps = s_h_esd_timestamps.anoms;\n\n        if(s_h_esd_timestamps) {\n            var anoms = all_data[i].filter((datum) => s_h_esd_timestamps.indexOf(datum[0]) !== -1 );\n        } else {\n            var anoms = [];\n        }\n\n        if(threshold) {\n            var date_group = {};\n            df.forEach( (d) => {\n                let date_string = new Date(d[0]).toLocaleDateString();\n                if(!date_group[date_string]) date_group[date_string] = [d[1]];\n                else date_group[date_string].push(d[1]);\n            });\n            var periodic_maxes = Object.keys(date_group).map( (date) => [date, Math.max(...date_group[date])] );\n            if(threshold === 'med_max') {\n                var thresh = median(periodic_maxes.map( (max) => max[1] ));\n            } else if(threshold === 'p95') {\n                var thresh = quantile(periodic_maxes.map( (max) => max[1] ), .95);\n            } else if(threshold === 'p99') {\n                var thresh = quantile(periodic_maxes.map( (max) => max[1] ), .99);\n            }\n            anoms = anoms.filter( (anom) => anom[1] >= thresh );\n        }\n\n        all_anoms = all_anoms.concat(anoms);\n        seasonal_plus_trend = seasonal_plus_trend.concat(data_decomp)\n    }\n\n    if(only_last) {\n        var start_date = new Date(df.slice(0).sort( (a,b) => new Date(a[0]) - new Date(b[0])).slice(-1)[0][0]);\n        start_date.setDate(start_date.getDate()-7);\n        var start_anoms = new Date(df.slice(0).sort( (a,b) => new Date(a[0]) - new Date(b[0])).slice(-1)[0][0]);\n        start_anoms.setDate(start_anoms.getDate()-1);\n\n        if(gran === 'day') {\n            var breaks = 3 * 12;\n            num_days_per_line = 7;\n        } else {\n            if(only_last === 'day') {\n                var breaks = 12;\n            } else {\n                start_date = new Date(df.slice(0).sort( (a,b) => new Date(a[0]) - new Date(b[0])).slice(-1)[0][0]);\n                start_date.setDate(start_date.getDate()-2);\n                start_date = new Date(start_date.toDateString());\n                start_anoms = new Date(df.slice(0).sort( (a,b) => new Date(a[0]) - new Date(b[0])).slice(-1)[0][0]);\n                start_anoms.setHours(start_anoms.getHours()-1);\n                var breaks = 3;\n            }\n        }\n\n        var x_subset_single_day = df.filter( (d) => new Date(d[0]) > start_anoms ).slice(0).sort( (a,b) => new Date(a[0]) - new Date(b[0]) );\n        var x_subset_week = df.filter( (d) => new Date(d[0]) <= start_anoms && new Date(d[0]) > start_date );\n\n        if(all_anoms.length > 0){\n            all_anoms = all_anoms.filter( (anom) => new Date(anom[0]) >= new Date(x_subset_single_day[0][0]) );\n        }\n        num_obs = x_subset_single_day.length;\n    }\n\n    var anom_pct = (df.length / parseFloat(num_obs)) * 100;\n\n    if(anom_pct === 0.) {\n        return {\n            anoms: null,\n            plot: null\n        }\n    }\n\n    if(e_value) {\n        var exp_val = seasonal_plus_trend.filter( (st) => all_anoms.map( (anom) => anom[0] ).indexOf(st[0]) !== -1 ).map( (st) => st[1] );\n        var d = all_anoms.map( (a, idx) => {\n            return {\n                timestamp: a[0],\n                anom: a[1],\n                expected_value: exp_val[idx]\n            }\n        } )\n    } else {\n        var d = all_anoms.map( (a) => {\n            return {\n                timestamp: a[0],\n                anom: a[1]\n            }\n        } )\n    }\n\n    return {\n        anoms: d,\n        plot: null\n    }\n}\n\nmodule.exports = detect_ts;"]}